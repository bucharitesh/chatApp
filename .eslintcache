[{"F:\\Github\\chatapp\\src\\index.js":"1","F:\\Github\\chatapp\\src\\reportWebVitals.js":"2","F:\\Github\\chatapp\\src\\App.js":"3","F:\\Github\\chatapp\\src\\firebaseConfig.js":"4","F:\\Github\\chatapp\\src\\components\\Loading.js":"5","F:\\Github\\chatapp\\src\\components\\Profile.js":"6","F:\\Github\\chatapp\\src\\pages\\Home.js":"7","F:\\Github\\chatapp\\src\\components\\Login\\index.js":"8","F:\\Github\\chatapp\\src\\components\\Nav\\Nav.js":"9","F:\\Github\\chatapp\\src\\components\\Sidebar\\index.js":"10","F:\\Github\\chatapp\\src\\components\\ChatWindow\\index.js":"11","F:\\Github\\chatapp\\src\\components\\Login\\NumericInput.js":"12","F:\\Github\\chatapp\\src\\components\\Login\\Countries.js":"13","F:\\Github\\chatapp\\src\\components\\Avatar.js":"14","F:\\Github\\chatapp\\src\\components\\Sidebar\\ChatListitems.js":"15","F:\\Github\\chatapp\\src\\components\\Sidebar\\NewChat.js":"16","F:\\Github\\chatapp\\src\\components\\ChatWindow\\ChatItem.js":"17","F:\\Github\\chatapp\\src\\utils\\getRecipient.js":"18","F:\\Github\\chatapp\\src\\components\\ChatIntro\\index.js":"19","F:\\Github\\chatapp\\src\\components\\AudioPlayer\\index.js":"20","F:\\Github\\chatapp\\src\\components\\AudioPlayer\\Controls.js":"21","F:\\Github\\chatapp\\src\\components\\AudioPlayer\\Slider.js":"22"},{"size":502,"mtime":1617536133495,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1615118788524,"results":"25","hashOfConfig":"24"},{"size":899,"mtime":1617536154531,"results":"26","hashOfConfig":"24"},{"size":630,"mtime":1617536205613,"results":"27","hashOfConfig":"24"},{"size":157,"mtime":1617206246013,"results":"28","hashOfConfig":"24"},{"size":4914,"mtime":1617706499545,"results":"29","hashOfConfig":"24"},{"size":1725,"mtime":1617738500068,"results":"30","hashOfConfig":"24"},{"size":4216,"mtime":1617536856099,"results":"31","hashOfConfig":"24"},{"size":877,"mtime":1617738544904,"results":"32","hashOfConfig":"24"},{"size":4254,"mtime":1617738562190,"results":"33","hashOfConfig":"24"},{"size":11886,"mtime":1617802240484,"results":"34","hashOfConfig":"24"},{"size":1425,"mtime":1617209867898,"results":"35","hashOfConfig":"24"},{"size":15288,"mtime":1617536437095,"results":"36","hashOfConfig":"24"},{"size":636,"mtime":1617737555315,"results":"37","hashOfConfig":"24"},{"size":2466,"mtime":1617735241270,"results":"38","hashOfConfig":"24"},{"size":4245,"mtime":1617699321861,"results":"39","hashOfConfig":"24"},{"size":1317,"mtime":1617800864739,"results":"40","hashOfConfig":"24"},{"size":168,"mtime":1617363559766,"results":"41","hashOfConfig":"24"},{"size":1609,"mtime":1617737913168,"results":"42","hashOfConfig":"24"},{"size":1878,"mtime":1617800610364,"results":"43","hashOfConfig":"24"},{"size":2007,"mtime":1617800601454,"results":"44","hashOfConfig":"24"},{"size":2772,"mtime":1617800606303,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1fbcd4c",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Github\\chatapp\\src\\index.js",[],["97","98"],"F:\\Github\\chatapp\\src\\reportWebVitals.js",[],"F:\\Github\\chatapp\\src\\App.js",[],"F:\\Github\\chatapp\\src\\firebaseConfig.js",[],"F:\\Github\\chatapp\\src\\components\\Loading.js",[],"F:\\Github\\chatapp\\src\\components\\Profile.js",["99"],"import styled from 'styled-components';\r\nimport { useState } from 'react';\r\n\r\nimport { FaPencilAlt } from \"react-icons/fa\";\r\nimport firebase from 'firebase/app';\r\n\r\nfunction Profile({user}) {\r\n    const [profileName, setProfileName] = useState(null)\r\n    const [profileImage, setProfileImage] = useState('https://i.pinimg.com/originals/51/f6/fb/51f6fb256629fc755b8870c801092942.png')\r\n\r\n    const imageHandler = async (e) => {\r\n        const ref = firebase.storage().ref();\r\n        const file = e.target.files[0];\r\n        const name = user.phoneNumber;\r\n        const metadata = {\r\n            contentType: file.type\r\n        };\r\n\r\n        const task = ref.child(`UserData/${name}`).put(file, metadata);\r\n        task\r\n            .then(snapshot => snapshot.ref.getDownloadURL())\r\n            .then(url => {\r\n                setProfileImage(url);\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n\r\n\r\n    const updateUser = (e) => {\r\n        e.preventDefault();\r\n        user.updateProfile({\r\n            displayName: profileName,\r\n            photoURL: profileImage,\r\n          }).then(function() {\r\n            // Update successful.\r\n            window.location.reload();\r\n          }).catch(function(error) {\r\n            // An error happened.\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <h3>Complete the Profile to Continue</h3>\r\n            {/* <Image width=\"100px\" height=\"100px\" src={user.photoURL == null ? \"/logo2.svg\" : user.photoURL} alt=\"\"/> */}\r\n                <Input \r\n                    value={profileName}\r\n                    placeholder=\"Your Name *\"\r\n                    onChange={e => {setProfileName(e.target.value == \"\" ? null : e.target.value)}} \r\n                />\r\n                {/* <input \r\n                    value={photoURL}\r\n                    placeholder=\"PhotoURL *\"\r\n                    onChange={e => {setPhotoURL(e.target.value == \"\" ? null : e.target.value)}} \r\n                /> */}\r\n                <PictureUpload>\r\n                    <div className=\"avatar-edit\">\r\n                        <input type=\"file\" accept=\"image/*\" name=\"image-upload\" id=\"imageUpload\" onChange={(e) => imageHandler(e)}  />\r\n                        <label for=\"imageUpload\">\r\n                            <FaPencilAlt/>\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"avatar-preview container2\">\r\n                        <img src={profileImage} alt=\"\" id=\"img\"/>\r\n                    </div>\r\n                </PictureUpload>\r\n\r\n                {profileName &&  profileImage ? \r\n                <button onClick={updateUser} className=\"submitbutton\" /> : \"\"}\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Input = styled.input`\r\n    width: 100%;\r\n    border: 1px #b1b1b1 solid;\r\n    padding: 20px;\r\n    border-radius: 3px;\r\n    margin: 10px 0px;\r\n    box-sizing: border-box;\r\n`\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction:column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 500px;\r\n    margin: 100px auto;\r\n    font-weight: 600;\r\n\r\n    h3 {\r\n        font-size: 20px;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .submitbutton {\r\n        background: #4664ff;\r\n    }\r\n\r\n    .submitbutton:hover{\r\n        background: #4653ff;\r\n    }\r\n\r\n`;\r\n\r\nconst PictureUpload = styled.div`\r\n    position: relative;\r\n    max-width: 205px;\r\n    margin: 50px auto;\r\n\r\n    .avatar-edit {\r\n        position: absolute;\r\n        right: 12px;\r\n        z-index: 1;\r\n        top: 10px;\r\n    }\r\n\r\n    .avatar-edit input {\r\n        display: none;\r\n    }\r\n\r\n    .avatar-edit input + label {\r\n        display: inline-block;\r\n        width: 34px;\r\n        height: 34px;\r\n        margin-bottom: 0;\r\n        border-radius: 100%;\r\n        background: #FFFFFF;\r\n        border: 1px solid transparent;\r\n        box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.12);\r\n        cursor: pointer;\r\n        font-weight: normal;\r\n        transition: all 0.2s ease-in-out;\r\n        display: flex;\r\n        justify-content:center;\r\n        align-items: center;\r\n    }\r\n\r\n    .avatar-edit input + label:hover {\r\n        background: #f1f1f1;\r\n        border-color: #d6d6d6;\r\n    }\r\n\r\n    .avatar-edit input + label:after {\r\n        color: #757575;\r\n        position: absolute;\r\n        top: 10px;\r\n        left: 0;\r\n        right: 0;\r\n        text-align: center;\r\n        margin: auto;\r\n    }\r\n\r\n    .avatar-preview {\r\n        width: 192px;\r\n        height: 192px;\r\n        position: relative;\r\n        border-radius: 100%;\r\n        border: 6px solid #3b5bfe;\r\n        box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.1);\r\n    }\r\n\r\n    .avatar-preview > img {\r\n        width: 100%;\r\n        height: 100%;\r\n        border-radius: 100%;\r\n        background-size: cover;\r\n        background-repeat: no-repeat;\r\n        background-position: center;\r\n    }\r\n`;\r\n\r\nexport default Profile;\r\n","F:\\Github\\chatapp\\src\\pages\\Home.js",["100"],"import Sidebar from '../components/Sidebar/'\r\nimport styled from 'styled-components';\r\nimport Nav from '../components/Nav/Nav';\r\nimport ChatIntro from '../components/ChatIntro/';\r\nimport ChatWindow from '../components/ChatWindow/';\r\n\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { auth } from '../firebaseConfig';\r\nimport { useState } from 'react';\r\n\r\nexport default function Home() {\r\n\r\n  const [user] = useAuthState(auth);\r\n\r\n  const [activeChat, setActiveChat] =  useState(null);\r\n\r\n  const [showNewChat, setShowNewChat] =  useState(false);\r\n\r\n  const handleOpenChat = () => {\r\n    setShowNewChat(true);\r\n  };\r\n\r\n  const handleCloseChat = () => {\r\n    setShowNewChat(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"__main\">\r\n      {/* <Head>\r\n        <title>Create Next App</title>\r\n        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n      </Head> */}\r\n\r\n      <Nav user={user}/>\r\n      \r\n      <Container>\r\n          <Sidebar \r\n            user={user} \r\n            handleOpenChat={handleOpenChat}\r\n            handleCloseChat={handleCloseChat}\r\n            setActiveChat={setActiveChat}\r\n          />\r\n          {activeChat !== null ?\r\n            <ChatWindow\r\n              user={user}\r\n              data={activeChat}\r\n            /> : <ChatIntro/>}\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst Container = styled.div`\r\n  flex-grow: 1;\r\n  background-color: #f4f3f8;\r\n  border-radius: 10px;\r\n  padding: 15px;\r\n  display: flex;\r\n  animation: 250ms cubic-bezier(0.1, 0.82, 0.25, 1) 0ms 1 normal none running windowAnim;\r\n\r\n  @keyframes windowAnim{\r\n        0%{\r\n            opacity:0;transform:scale(1.3)\r\n        }\r\n        to{\r\n            opacity:1;transform:scale(1)\r\n        }\r\n    }\r\n\r\n`;","F:\\Github\\chatapp\\src\\components\\Login\\index.js",["101","102","103","104","105","106","107","108"],"import styled from 'styled-components';\r\nimport CountriesList from \"./Countries\";\r\nimport firebase from 'firebase/app';\r\nimport { useEffect, useState } from 'react';\r\nimport NumericInput from './NumericInput';\r\n\r\nfunction Login(props) {\r\n\r\n    const [view, setView] = useState(\"numview\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [mod, setMod] = useState(\"sendcode\");\r\n    const [dialCode, setDialCode] = useState(\"+91\");\r\n    const [phone, setPhone] = useState(null);\r\n    const [verificationcode, setVerificationCode] = useState(\"\");\r\n    const [confirmationResult, setConfirmationResult] = useState(null);\r\n    \r\n    useEffect(()=>{\r\n        if(!window.recaptchaverifier){\r\n            window.recaptchaverifier = new firebase.auth.RecaptchaVerifier(\"__phonesigner__\");\r\n            window.recaptchaverifier.render().then(wid => {\r\n                window.widgetID = wid;\r\n            });\r\n        }\r\n    });\r\n\r\n    const signIn= () => {\r\n        var appverifier = window.recaptchaverifier,\r\n            phoneNumber = dialCode + phone;\r\n            firebase.auth().signInWithPhoneNumber(phoneNumber, appverifier)\r\n            .then(confirmation => {\r\n                setConfirmationResult(confirmation);\r\n                setVerificationCode(null);\r\n                setMod(\"verifycode\");\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n        });\r\n    }\r\n\r\n    const verify =() => {\r\n        confirmationResult.confirm(verificationcode)\r\n        .then(result => {\r\n            console.log((\"You are signed in...\"));\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    const verifyCodeView = () => {\r\n        return(\r\n            <>\r\n            <h3>Verify Phone Number</h3>\r\n            <p>Verification Code sent to {dialCode + phone}</p>\r\n\r\n            <input\r\n                value={verificationcode}\r\n                className=\"phone\" \r\n                onChange={e => {setVerificationCode(e.target.value == \"\" ? null : e.target.value)}} \r\n                placeholder=\"xxxxxx\"\r\n            />\r\n\r\n            <button className=\"continueButton\" onClick={verify}>\r\n                Verify\r\n            </button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const sendCodeView = () => {\r\n        return(\r\n            <>\r\n            <h3>Login</h3>\r\n            <select\r\n                defaultValue={dialCode}\r\n                onChange={e => {setDialCode(e.target.value == \"\" ? null : e.target.value)}}\r\n                className=\"phone\"\r\n            >\r\n                {\r\n                    CountriesList.map(e => {\r\n                        return (\r\n                            <option className=\"select\" value={e.dial_code}>{e.name} ({e.dial_code})</option>\r\n                        )\r\n                    })\r\n                }\r\n            </select>\r\n\r\n            <NumericInput\r\n                defaultValue={phone}\r\n                className=\"phone\" \r\n                onChange={e => {setPhone(e.target.value == \"\" ? null : e.target.value)}} \r\n                placeholder=\"000 000 0000\"\r\n            />\r\n\r\n            <div className=\"__phonesigner__\" id=\"__phonesigner__\" />\r\n\r\n            <button className=\"continueButton\" onClick={signIn}>\r\n                Continue\r\n            </button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            {/* <Head>\r\n                <title>Login</title>\r\n            </Head> */}\r\n\r\n            {mod == \"sendcode\" ? sendCodeView() : verifyCodeView()}\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    width: 301px;\r\n    margin: 100px auto;\r\n    font-weight: 500;\r\n\r\n    .phone{\r\n    width: 100%;\r\n    border: 1px #b1b1b1 solid;\r\n    padding: 20px;\r\n    border-radius: 3px;\r\n    margin: 10px 0px;\r\n    box-sizing: border-box;\r\n    font-weight: bold;\r\n}\r\n    .continueButton{\r\n        width: 100%;\r\n        border: 1px #4664ff solid;\r\n        padding: 20px;\r\n        border-radius: 3px;\r\n        margin: 10px 0px;\r\n        box-sizing: border-box;\r\n        background: #4664ff;\r\n        color: #fff;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .continueButton:hover{\r\n        background: #4653ff;\r\n    }\r\n`;\r\n\r\nexport default Login","F:\\Github\\chatapp\\src\\components\\Nav\\Nav.js",[],"F:\\Github\\chatapp\\src\\components\\Sidebar\\index.js",["109","110"],"import styled from 'styled-components';\r\nimport ChatListItems from './ChatListitems';\r\nimport NewChat from './NewChat';\r\nimport { useState } from 'react';\r\nimport { db } from '../../firebaseConfig';\r\nimport { useCollection } from 'react-firebase-hooks/firestore';\r\n\r\nimport { FiPlus, FiSearch } from \"react-icons/fi\";\r\n\r\nfunction Sidebar({user, setActiveChat}) {\r\n\r\n    const [showModal, setShowModal] =  useState(false);\r\n\r\n    const useUserRef = db.collection('users');\r\n    const [userSnapshot] = useCollection(useUserRef);\r\n\r\n    const userChatRef = db.collection('chats').where('users', 'array-contains', user.phoneNumber)\r\n    const [chatsSnapshot] = useCollection(userChatRef);\r\n\r\n    const handleOpen = () => {\r\n        setShowModal(true);\r\n    };\r\n    \r\n    const handleClose = () => {\r\n        setShowModal(false);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n          <Button className=\"btn\" onClick={handleOpen}>\r\n              <FiPlus size=\"30px\"/>\r\n            <span>New conversation</span>\r\n          </Button>\r\n\r\n        <NewChat\r\n            chatlist={userSnapshot}\r\n            chatsSnapshot={chatsSnapshot}\r\n            open={showModal} \r\n            close={handleClose}\r\n        />\r\n\r\n        <ChatList_Header>\r\n          <h2>Chats</h2>\r\n          <BtnNoBg>\r\n            <i className=\"fa fa-ellipsis-h\"></i>\r\n          </BtnNoBg>\r\n        </ChatList_Header>\r\n\r\n        {/* ChatSearch */}\r\n        <ChatListSearch>\r\n          <Search_wrap>\r\n            <input type=\"text\" placeholder=\"Search Here\" required />\r\n            <button>\r\n              <FiSearch size=\"19px\"/>\r\n            </button>\r\n          </Search_wrap>\r\n        </ChatListSearch>\r\n\r\n        {/* ChatItems */}\r\n        <Chatlist>\r\n        {\r\n            chatsSnapshot?.docs.map((chat) => (\r\n                <ChatListItems\r\n                    onClick={() => setActiveChat(chat.id)}\r\n                    users={chat.data().users}\r\n                    key={chat.id}\r\n                    id={chat.id}\r\n                />\r\n            ))\r\n        }\r\n        </Chatlist>\r\n\r\n        \r\n\r\n        \r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Button = styled.button`\r\n    border: none;\r\n    outline: none;\r\n    cursor: pointer;\r\n    width: 180px;\r\n    height: 47px;\r\n    line-height: 47px;\r\n    border-radius: 5px;\r\n    box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.02);\r\n    display: flex;\r\n    transition: all 0.3s ease-in-out;\r\n    justify-content: space-between;\r\n    padding: 0px 10px;\r\n    font-weight: 600;\r\n    background-color: #fff;\r\n\r\n    :hover {\r\n        background-color: #4664ff;\r\n        color: #fff;\r\n        transform: scale(1.02);\r\n    }\r\n\r\n    i {\r\n        flex: 0.2;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        height: 100%;\r\n        font-size: 18px;\r\n        border-right: 1px solid #ebe7fb;\r\n    }\r\n\r\n    span {\r\n        flex: 1;\r\n        display: flex;\r\n        padding-left: 5px;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n\r\n    svg {\r\n        height: 100%;\r\n        padding-right: 5px;\r\n        border-right: 3px solid #ebe7fb;\r\n    }\r\n\r\n`;\r\nconst Container = styled.div`\r\n  border-right: 1px solid #ebe7fb;\r\n  padding: 0 15px 0 0px;\r\n  max-width: 250px;\r\n`;\r\n\r\nconst ChatListSearch = styled.div`\r\n`;\r\n\r\nconst ChatList_Header = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst BtnNoBg = styled.div`\r\n  background-color: transparent;\r\n  border: none;\r\n  box-shadow: none;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n  padding: 10px;\r\n  color: #dad9dd;\r\n  outline: none;\r\n`;\r\n\r\nconst Search_wrap = styled.div`\r\n    background-color: #e6e5ea;\r\n    border-radius: 5px;\r\n\r\n    input {\r\n        background-color: transparent;\r\n        border: none;\r\n        padding: 15px 15px;\r\n        outline: none;\r\n        width: 80%;\r\n        padding-right: 0;\r\n    }\r\n    \r\n    button {\r\n        height: 46px;\r\n        border: none;\r\n        background-color: transparent;\r\n        outline: none;\r\n        width: 20%;\r\n        cursor: pointer;\r\n        font-size: 20px;\r\n    }\r\n`;\r\n\r\n\r\nconst Chatlist = styled.div`\r\n    margin-top: 30px;\r\n    overflow: auto;\r\n    max-height: calc(100vh - calc(100vh / 3));    \r\n`;\r\n\r\nexport default Sidebar\r\n","F:\\Github\\chatapp\\src\\components\\ChatWindow\\index.js",["111","112"],"F:\\Github\\chatapp\\src\\components\\Login\\NumericInput.js",["113"],"import React, { Component } from 'react';\r\n\r\nexport default class NumericInput extends Component {\r\n    render() {\r\n\r\n        const props = this.props;\r\n\r\n        return (\r\n            <input \r\n                defaultValue={props.defaultValue ? props.defaultValue : \"\"}\r\n                type={props.type || \"text\"}\r\n                className={props.className || \"\"}\r\n                placeholder={props.placeholder || null}\r\n                onChange={props.onChange ? props.onChange : ()=>{}}\r\n                onKeyPress={evt => {\r\n                    let charCode = evt.which ? evt.which : evt.keyCode,\r\n                    txt = evt.target.value;\r\n                    \r\n                    if(\r\n                        \"numonly\" in props\r\n                        && charCode == 46\r\n                    ){\r\n                        if(txt.indexOf(\".\") > -1){\r\n                            evt.preventDefault();\r\n                            evt.stopPropagation();\r\n                        }\r\n                    }else{\r\n                        if(\r\n                            charCode > 31\r\n                            && (charCode < 48 || charCode > 57)\r\n                        ){\r\n                            evt.preventDefault();\r\n                            evt.stopPropagation();\r\n                        }\r\n                    }\r\n                    return true;\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}","F:\\Github\\chatapp\\src\\components\\Login\\Countries.js",[],"F:\\Github\\chatapp\\src\\components\\Avatar.js",[],"F:\\Github\\chatapp\\src\\components\\Sidebar\\ChatListitems.js",[],"F:\\Github\\chatapp\\src\\components\\Sidebar\\NewChat.js",["114"],"import Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from \"../Avatar\";\r\nimport styled from 'styled-components';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { auth, db } from '../../firebaseConfig';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    paper: {\r\n      backgroundColor: '#fff',\r\n      padding: theme.spacing(2, 4, 3),\r\n      maxHeight: '600px',\r\n      minWidth: '400px',\r\n      overflow: 'auto'\r\n    },\r\n  }));\r\n\r\nfunction NewChat({open, close, chatlist, chatsSnapshot}) {\r\n\r\n    const [user] = useAuthState(auth);\r\n\r\n    const chatAlreadyExists = (reciptent) =>\r\n      !!chatsSnapshot?.docs.find(\r\n        (chat) => \r\n          chat.data().users.find((user) => user == reciptent )?.length > 0\r\n    );\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Modal\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={close}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <h2 id=\"transition-modal-title\">\r\n                USER LIST\r\n            </h2>\r\n\r\n\r\n            {chatlist?.docs.map((chat) => (      \r\n                  chat.id !== user.phoneNumber && !chatAlreadyExists(chat.id) ? (\r\n                    \r\n                  chat.data().name && chat.data().photoURL &&\r\n                    <ChatListItem key={chat.id} onClick={ (e) => {\r\n                      e.preventDefault();\r\n                      db.collection('chats').add({\r\n                        users: [user.phoneNumber, chat.id]\r\n                      }).then((docRef) => {\r\n                        db.collection('messages').doc(docRef.id).set({});\r\n                    });\r\n                      close()\r\n                    }    \r\n                    }>\r\n                    <Avatar image={chat.data().photoURL}/>\r\n                    <div className=\"userMeta\">\r\n                      <p>{chat.data().name}</p>\r\n                    </div>\r\n                  </ChatListItem>\r\n                  ) : \"\" \r\n            ))}\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    )\r\n}\r\n\r\nconst ChatListItem = styled.div`\r\n  display: flex;\r\n  border-bottom: 1px solid #ebe7fb;\r\n  padding-bottom: 10px;\r\n  margin-top: 10px;\r\n  cursor: pointer;\r\n  padding: 10px 10px 10px 20px;\r\n  transition: all 0.3s cubic-bezier(0.88, 0.19, 0.37, 1.11);\r\n  transform: scale(0);\r\n  animation-name: showIn;\r\n  animation-duration: 0.2s; /* or: Xms */\r\n  animation-iteration-count: 1;\r\n  animation-direction: normal; /* or: normal */\r\n  animation-timing-function: cubic-bezier(\r\n      0.88,\r\n      0.19,\r\n      0.37,\r\n      1.11\r\n  ); /* or: ease, ease-in, ease-in-out, linear, cubic-bezier(x1, y1, x2, y2) */\r\n  animation-fill-mode: both; /* or: backwards, both, none */\r\n  animation-delay: 0.1s; /* or: Xms */\r\n\r\n    @keyframes showIn {\r\n        0% {\r\n            transform: scale(0);\r\n        }\r\n        100% {\r\n            transform: scale(1);\r\n        }\r\n    }\r\n\r\n    :first-child {\r\n        margin-top: 0;\r\n    }\r\n\r\n    .userMeta p {\r\n        margin: 0;\r\n        padding: 0;\r\n        color: #000;\r\n        font-weight: 600;\r\n        font-size: 14px;\r\n    }\r\n\r\n    .userMeta span {\r\n        margin: 0;\r\n        padding: 0;\r\n        color: #ceccd3;\r\n        font-weight: 400;\r\n        font-size: 12px;\r\n        display: block;\r\n    }\r\n        \r\n    :hover,\r\n    .active {\r\n        background: #fff;\r\n        border-radius: 10px;\r\n    }\r\n\r\n    .avatar {\r\n        width: 40px;\r\n        height: 40px;\r\n        border-radius: 50%;\r\n\r\n        margin-right: 20px;\r\n        position: relative;\r\n    }\r\n\r\n    .avatar img {\r\n        max-width: 100%;\r\n        object-fit: cover;\r\n    }\r\n\r\n    .avatar-img {\r\n        overflow: hidden;\r\n        border-radius: 50%;\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n\r\n`;\r\n\r\n\r\nexport default NewChat\r\n","F:\\Github\\chatapp\\src\\components\\ChatWindow\\ChatItem.js",["115","116","117","118"],"F:\\Github\\chatapp\\src\\utils\\getRecipient.js",[],"F:\\Github\\chatapp\\src\\components\\ChatIntro\\index.js",[],"F:\\Github\\chatapp\\src\\components\\AudioPlayer\\index.js",[],"F:\\Github\\chatapp\\src\\components\\AudioPlayer\\Controls.js",["119"],"F:\\Github\\chatapp\\src\\components\\AudioPlayer\\Slider.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":51,"column":67,"nodeType":"126","messageId":"127","endLine":51,"endColumn":69},{"ruleId":"128","severity":1,"message":"129","line":17,"column":10,"nodeType":"130","messageId":"131","endLine":17,"endColumn":21},{"ruleId":"128","severity":1,"message":"132","line":9,"column":12,"nodeType":"130","messageId":"131","endLine":9,"endColumn":16},{"ruleId":"128","severity":1,"message":"133","line":9,"column":18,"nodeType":"130","messageId":"131","endLine":9,"endColumn":25},{"ruleId":"128","severity":1,"message":"134","line":10,"column":12,"nodeType":"130","messageId":"131","endLine":10,"endColumn":19},{"ruleId":"128","severity":1,"message":"135","line":10,"column":21,"nodeType":"130","messageId":"131","endLine":10,"endColumn":31},{"ruleId":"124","severity":1,"message":"125","line":59,"column":68,"nodeType":"126","messageId":"127","endLine":59,"endColumn":70},{"ruleId":"124","severity":1,"message":"125","line":76,"column":60,"nodeType":"126","messageId":"127","endLine":76,"endColumn":62},{"ruleId":"124","severity":1,"message":"125","line":91,"column":57,"nodeType":"126","messageId":"127","endLine":91,"endColumn":59},{"ruleId":"124","severity":1,"message":"125","line":110,"column":18,"nodeType":"126","messageId":"127","endLine":110,"endColumn":20},{"ruleId":"136","severity":1,"message":"137","line":42,"column":9,"nodeType":"138","messageId":"139","endLine":42,"endColumn":26},{"ruleId":"136","severity":1,"message":"140","line":51,"column":11,"nodeType":"138","messageId":"139","endLine":51,"endColumn":24},{"ruleId":"128","severity":1,"message":"141","line":7,"column":28,"nodeType":"130","messageId":"131","endLine":7,"endColumn":37},{"ruleId":"124","severity":1,"message":"125","line":41,"column":22,"nodeType":"126","messageId":"127","endLine":41,"endColumn":24},{"ruleId":"124","severity":1,"message":"125","line":21,"column":37,"nodeType":"126","messageId":"127","endLine":21,"endColumn":39},{"ruleId":"124","severity":1,"message":"125","line":32,"column":49,"nodeType":"126","messageId":"127","endLine":32,"endColumn":51},{"ruleId":"128","severity":1,"message":"142","line":3,"column":8,"nodeType":"130","messageId":"131","endLine":3,"endColumn":19},{"ruleId":"124","severity":1,"message":"125","line":16,"column":32,"nodeType":"126","messageId":"127","endLine":16,"endColumn":34},{"ruleId":"124","severity":1,"message":"125","line":21,"column":32,"nodeType":"126","messageId":"127","endLine":21,"endColumn":34},{"ruleId":"124","severity":1,"message":"125","line":26,"column":32,"nodeType":"126","messageId":"127","endLine":26,"endColumn":34},{"ruleId":"124","severity":1,"message":"125","line":26,"column":24,"nodeType":"126","messageId":"127","endLine":26,"endColumn":26},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'showNewChat' is assigned a value but never used.","Identifier","unusedVar","'view' is assigned a value but never used.","'setView' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component ChatList_Header must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Search_wrap must be in PascalCase or SCREAMING_SNAKE_CASE","'useEffect' is defined but never used.","'AudioPlayer' is defined but never used.","no-global-assign","no-unsafe-negation"]